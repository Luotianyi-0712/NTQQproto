syntax = "proto2";
//package code generated by Rick  DO NOT EDIT.
package   com.tencent.trpcprotocol.qqlog.qqlog_manage;

//code generated by Rick  DO NOT EDIT.
option  java_package = "com.tencent.trpcprotocol.qqlog.qqlog_manage";
//option  java_multiple_files = false;
option  java_outer_classname = "QqlogManage";
//code generated by Rick  DO NOT EDIT.
//option  go_package = "git.woa.com/trpcprotocol/qqlog/qqlog_manage";
//option optimize_for = LITE_RUNTIME;

// 建议使用谷歌protobuf规范 遵循PB语法检查
// 谷歌protobuf规范地址：https://developers.google.com/protocol-buffers/docs/style
// Proto格式检查（Tencent）包含：Google protobuf规范和数据校验检查

// 不建议使用 google/protobuf/any.proto
// any强依赖package type.googleapis.com/_packagename_._messagename_.
// https://developers.google.com/protocol-buffers/docs/proto3#any

// tRPC-Go数据校验模块（**移除注释使用**）
// tsecstr仅允许中英文字母、数字、=、+、/、@、#、_、-传入。注意，字符集不包括空格、|等符号，如有需要，请自定义校验表达式。
// 详参见规则手册：https://iwiki.woa.com/pages/viewpage.action?pageId=241919333

// 指令类型枚举
enum Cmd {
  CMD_UNDEFINED = 0;
  CMD_UPLOAD_LOG = 1;        // 上传日志
  CMD_SET_LOG_LEVEL = 2;     // 设置日志等级
  CMD_SET_LOG_LEVEL_AND_UPLOAD_LOG = 3; // 上传日志且设置日志等级
}

enum LogLevel {
  LOG_LEVEL_OFF = 0; // OFF = 0; EVENT = 1; WARN = 2; INFO = 3; DEBUG = 4;
  LOG_LEVEL_EVENT = 1; 
  LOG_LEVEL_WARN = 2;
  LOG_LEVEL_INFO = 3;
  LOG_LEVEL_DEBUG = 4;
}
  
// 通过key-value格式传递参数更加灵活
message Param {
  optional string key = 1;
  optional string value = 2;
}

// 命令+参数
message MsgBody
{
  optional Cmd cmd = 1;   // 命令类型，值列表：1-UPLOAD_LOG | 2-SET_LOG_LEVEL | 3-SET_LOG_LEVEL_AND_UPLOAD_LOG
  optional int64 seq = 2; // 日志 seq，唯一表示某次命令下发动作，客户端上传日志时需携带此 seq
  optional string log_tag = 3; // 回查标签
  optional int64 start_time = 4; // 日志捞取的开始时间，linux timestamp
  optional int64 end_time = 5; // 日志捞取的结束时间，linux timestamp
  optional uint32 log_size = 6; // 日志大小限制
  optional uint32 log_field = 7; // 用来控制上传哪些日志，解释权归终端，不同终端对此字段对解释不同。
  optional uint32 platform = 8; // 平台类型： 1-all | 2-iPhone | 3-Android | 4-Mac | 5-Windows | 6-iPad
  optional uint32 product = 9; // 产品名称： 1-QQ | 2-产品XXX | 3产品XXX
  optional LogLevel log_level = 10; // 要设置的日志等级，对 SET_LOG_LEVEL 命令有用
  optional int64 log_level_expire_time = 11; // linux timestamp 设置的日志等级的过期时间，过期后终端需恢复默认日志等级
  repeated Param params = 12; // 其他参数
}
