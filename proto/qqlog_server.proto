syntax = "proto2";
//package code generated by Rick  DO NOT EDIT.
package   trpc.qqlog.qqlog_server;

//code generated by Rick  DO NOT EDIT.
option  java_package="com.tencent.trpcprotocol.qqlog.qqlog_server";
//option  java_multiple_files = false;
//java_outer_classname的命名不要与message、service、enum的命名相同
option  java_outer_classname  = "QqlogServer";
//code generated by Rick  DO NOT EDIT.
//option  go_package ="git.woa.com/trpcprotocol/qqlog/qqlog_server";

// 建议使用谷歌protobuf规范 遵循PB语法检查
// 谷歌protobuf规范地址：https://developers.google.com/protocol-buffers/docs/style
// Proto格式检查（Tencent）包含：Google protobuf规范和数据校验检查

// 不建议使用 google/protobuf/any.proto
// any强依赖package type.googleapis.com/_packagename_._messagename_.
// https://developers.google.com/protocol-buffers/docs/proto3#any

// tRPC-Go数据校验模块（**移除注释使用**）
// tsecstr仅允许中英文字母、数字、=、+、/、@、#、_、-传入。注意，字符集不包括空格、|等符号，如有需要，请自定义校验表达式。
// 详参见规则手册：https://iwiki.woa.com/pages/viewpage.action?pageId=241919333

// 客户端设备信息
message ClientDevice {
  optional string appid = 1; // appid
  optional string client_uins = 2; // 客户端报上当前imei锁登录过的的qq号码，用于多账号查问题用
  optional string net_type = 3; // 网络类型
  optional string version = 4; // 版本
  optional string qq_version = 5; // QQ版本
}

// 日志文件信息
message LogFile {
  optional string log_file_name = 1 ;//日志名称
  optional int32 log_size    = 2 ; // 日志大小
  optional int32 zip_log_size = 3 ; // 日志压缩包大小
  optional int32 log_line_num = 4 ; // 日志行数
  optional string file_uri   = 5 ; // 日志文件的uri，相当于大数据通道的saveUUID
  optional string public_key = 6 ; // 公钥
}

// 进度信息
message Process {
  enum Status {
    status_undefined = 0;
    status_get_push_cmd = 1;          //客户端收到Push命令
    status_err_exist_same_task = 2;   // 客户端收到Push命令，但已存在相同时间段任务
    status_check_log = 3;             // 客户端收到Push命令，正在检索日志
    status_err_check_log = 4;         // 客户端检索失败，原因为：XXX（如未找到对应时间段日志、日志文件大小超出限制
    status_compress_log  = 5;         // 客户端检索完成，正在压缩日志文件。
    status_err_compress_log  = 6;     // 客户端压缩日志文件失败，原因为：XXX
    status_upload_log = 7;            // 客户端压缩完成，开始上传日志。
    status_err_upload_log  = 8;       // 客户端上传日志文件失败，原因为：XXX
    status_success = 9;               // 客户端上传日志文件成功。
  }
  optional Status status = 1;//状态
  optional string status_info = 2; // 状态描述
  optional double upload_progress  = 3; // 上传进度，小数，如0.5，指50%。
}

// 客户端上报Req
message SsoReportReq
{
  enum ReportType {
    report_type_undefined = 0;
    report_type_passive_report_device = 1 ;        // 被动上报设备信息
    report_type_passive_report_process = 2 ;       // 被动上报进度
    report_type_active_report_device = 3 ;         // 主动上报设备信息
    report_type_active_report_process = 4 ;        // 主动上报进度
    report_type_upload_file_process = 5 ;          // 文件上传进度
  }
  optional uint32 seq = 1;                   // 消息序列号。必填
  optional uint32 sub_seq = 2;                   // 消息序列号，用于区分不同平台，枚举为：2-iPhone；3-Android；4-Windows；5-Mac；6-iPad。必填
  optional uint64 uin =3 ;
  optional int32 report_type = 4 ;          // 上报类型。必填
  optional string imei =5;                  // 终端身份的唯一标识。必填
  optional string os = 6;                    // 操作系统信息。必填
  optional string model = 7;                 // 机型。必填
  required ClientDevice client_device = 8 ;  // 客户端设备信息。选填
  required LogFile log_file = 9 ;            // 日志文件信息。选填
  required Process process = 10;  // 进度。选填
}

// 客户端上报Rsp
message SsoReportRsp
{
  optional uint32 seq = 1; // 消息序列号
}

//service Portal {
  // 客户端上报
  //rpc SsoReport(SsoReportReq) returns (SsoReportRsp);
//}