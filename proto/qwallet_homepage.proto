syntax = "proto2";
//package code generated by Rick  DO NOT EDIT.
package   trpc.qpay.homepage2;

//code generated by Rick  DO NOT EDIT.
option  java_package="com.qwallet.protocol.Wallet.pb";
option  java_multiple_files = false;
option  java_outer_classname  = "QWalletHomePage";
//code generated by Rick  DO NOT EDIT.
//option  go_package ="git.code.oa.com/trpcprotocol/qpay/homepage2";

// 建议使用谷歌protobuf规范 遵循PB语法检查
// 谷歌protobuf规范地址：https://developers.google.com/protocol-buffers/docs/style
// Proto格式检查（Tencent）包含：Google protobuf规范和数据校验检查

// 不建议使用 google/protobuf/any.proto
// any强依赖package type.googleapis.com/_packagename_._messagename_.
// https://developers.google.com/protocol-buffers/docs/proto3#any

// tRPC-Go数据校验模块（**移除注释使用**）
// tsecstr仅允许中英文字母、数字、=、+、/、@、#、_、-传入。注意，字符集不包括空格、|等符号，如有需要，请自定义校验表达式。
// 详参见规则手册：https://iwiki.woa.com/pages/viewpage.action?pageId=241919333
//import "trpc/common/validate.proto";

// 编译方式：
// QQLite/pbfile/protoc_mqq --javamqq_out=Business/qwallet-impl/src/main/java  QQLite/pbfile/qwallet/QWalletHomePage.proto


// Homepage2 前期有建homepage服务，协议为proto3,终端不支持proto3,改proto2重新实现
//service Homepage2 {
//  // SsoGetHomepage sso 通道获取钱包首页内容
//  rpc SsoGetHomepage (GetHomepageReq) returns (GetHomepageRsp);
//  // SsoGetHomepageV2 9.0.15改版
//  rpc SsoGetHomepageV2 (GetHomepageV2Req) returns (GetHomepageV2Rsp);
//  // SsoGetWalletSetting 钱包设置
//  rpc SsoGetWalletSetting(GetWalletSettingReq)returns(GetWalletSettingRsp);
//  // SsoGetPaySetting 支付设置
//  rpc SsoGetPaySetting(GetPaySettingReq)returns(GetPaySettingRsp);
//  // GetAccount 余额页
//  rpc GetAccount(GetAccountReq)returns(GetAccountRsp);
//
//}
message GetHomepageReq{
  optional Head head = 1;
}

message GetHomepageRsp{
  repeated AppInfo top_apps = 1; // 顶部四宫格对应的信息
  repeated AppInfo apps = 2; // 十宫格
  repeated Belt belts = 3; // 小蓝条
  repeated VirtualAsset assets= 4; // 虚拟资产信息
  optional Declaim declaim = 5; // 扩展信息
  // optional RedPoint user_center = 6; // 右上角设置 红点，不再使用，功能收到VirtualEntity中
  optional H5 h5 = 7; // 首页h5页面信息
  repeated VirtualEntity virtual_entities = 8;
  optional Control control = 9;  // 一些全局控制参数
  repeated AppInfo operation_apps=10;//运营宫格
}

message GetHomepageV2Req{
  optional Head head = 1;
}

message GetHomepageV2Rsp{
  optional AppInfo pay_code_app = 1;
  repeated AppInfo top_apps = 2; // 顶部四宫格对应的信息
  repeated VirtualAsset assets = 3; // 虚拟资产信息
  optional AppGroup finance_app_group = 4; // 金融服务分组
  optional AppGroup life_app_group = 5; // 生活娱乐分组， 此两组终端逻辑异化，直接给两个字段比用repeated更方便
  repeated Belt belts = 6; // 小蓝条
  optional Declaim declaim = 7; // 扩展信息
  optional H5 h5 = 8; // 首页h5页面信息
  repeated VirtualEntity virtual_entities = 9;
  repeated RedDot red_dots = 10;
}

message AppGroup{
  optional string title = 1;  // 分组标题
  repeated AppInfo apps = 2;  // 分组内的应用列表
}

message ABTest {
  optional string exp_name = 1; // 实验名
  optional string exp_version_key = 2; // 实验版本key
  optional string params_json = 3;    // 实验参数
}

message Head {
  optional bool  qyy_switch = 1; // qyy标识
  optional bool  is_youth_mode = 2; //  是否是青少年模式
  optional string phone_model = 3; //  手机型号
  optional int32 memory_size = 4; // 机器内存大小，单位MB
  optional string cpu_type = 5; // cpu类型 如QualcommTechnologies,IncSM8150
  optional int32 cpu_max_freq = 6; // cpu 主频，单位MHz
  optional int32 cpu_core_num = 7; // CPU 核数
  repeated ABTest abtest = 8; // abtest参数
  optional bool care_model = 9; // 是否关怀模式

}

// AppInfo 应用信息
message AppInfo {
  optional int32 id = 1;            // 唯一标识
  optional int32 type = 2;          // 类型，用于区分账户、收付款 以及其他入口后续扩展使用
  optional string name = 3;         // 名称
  optional string url = 4;          // 点击跳转
  optional string pv = 5;           // 点击/曝光上报标识
  optional string icon = 6;         // 图表资源url
  optional string small_icon = 7;   // 小图标iconUrl ,顶部四宫格使用
  optional Market market = 8;       // 角标
  optional RedPoint red_point = 9;  // 自定义红点
  optional string company_name = 10;// 公司名称
  optional int64 bit_flag = 11;     // 控制标识位， 从低位开始，0x1:青少年模式开关， 0x2 APP管理开关，0-不受限，1-用户不可屏蔽
  optional int64 app_id = 12;       // 对应开平appid
  optional bool has_statement = 13; // 是否有免责声明
  optional string background=14;           //底色，运营宫格使用
  optional string night_background=15;      //夜间模式底色，运营宫格使用
  optional string desc=16;          // 运营描述
}


// VirtualAsset 虚拟资产
message VirtualAsset {
  optional string  title = 1;       // 名称 如Q币
  optional string  sub_title = 2;   // 副标题 如充值
  optional string  icon = 3;        // 入口icon
  optional string  url = 4;         // 跳转链接
  optional int32   type = 5;        // 定义一个枚举 1：Q币，2：特权，3：金币，4：理财宠物，5：我的卡券
}
// Extend 扩展信息
message Declaim{
  optional string statement_title = 1;      //声明标题（免责）
  optional string statement_content = 2;    //声明内容（免责）
  optional string statement_btn_text = 3;   //声明按钮内容（免责）
}

// Belt 提示信息结构
message Belt{
  optional int32 id = 1;
  optional string name = 2;
  optional string url = 3;
  optional string pv = 4;
  optional string icon = 5;                 // 警示标志的URL
  optional int32 close_btn_type = 6;        // 关闭按钮的类型 0：X按钮 1：文字关闭按钮
  optional string close_btn_title = 7;      // 关闭按钮的标题
  optional int32 show_count = 8;            // 展示次数，达到次数自动关闭
  optional int32 type = 9;                  // 0：普通小白条；1：网厅余额提醒小白条 2:提醒类小白条
  optional int32 icon_red_point_type = 10;  // 当type=0时有效，0：红点显示  1:自定义
  optional string icon_red_point_url = 11;  // 右侧图标,当iconRedPointtype=1时有效。
  optional DateRange range = 12;            // 有效的时间区间
  optional string text = 13;                // 显示内容，注意早期版本用name用展示内容(8.9.0)
}

// Market 角标结构
message Market{
  optional int32 id = 1; // 角标ID
  optional int32   type = 2;
  optional string  icon = 3;
  optional DateRange range = 4;
  optional int32   action = 5;
  optional string  name = 6;

}

message RedPoint{
  optional int32       id = 1;              // 红点id, 0 表示没有红点，其它为红点id
  optional DateRange   range = 2;           // 红点展示时间段
  optional int32       type = 3;            //红点类型  对于卡券 1：新券红点  2：过期券红点
}
message DateRange{
  optional int64 begin = 1;    // 开始时间，unix时间戳
  optional int64 end = 2;      // 结束时间，unix时间戳
}

message H5{
  optional bool is_open = 1;      // 是否有效,此值为true时，终端会加载下面的url内容
  optional string url = 2;        // 打开页面url
  optional string skeleton = 3;   // 骨架图url
}

message VirtualEntity{
  optional int32 id = 1;      // ID 虚拟实体唯一标识
  optional int32 type = 2;    // 虚拟实体类型，1-个人中心红点，2-h5页面红点
  optional Market market = 3;       // 角标
  optional RedPoint red_point = 4;  // 自定义红点

}

message Control{
  optional bool has_top_app_sep = 1; // Top宫格内是否有分隔线
}

message GetWalletSettingReq{
  optional Head head = 1;
}
message GetWalletSettingRsp{
  repeated SettingGroup groups = 1;
}
message GetPaySettingReq{
  optional Head head = 1;
}
message GetPaySettingRsp{
  repeated SettingGroup groups = 1;
}
message GetAccountReq{
  optional Head head = 1;
}
message GetAccountRsp{
  repeated Entry top_entry = 1;
}

message SettingGroup{
  optional int32  id = 1;
  optional string name = 2;
  repeated SettingItem items = 3;
}

message SettingItem{
  optional int32          id = 1;             // 唯一标识
  optional string         name = 2;           // 外显名称
  optional string         sub_name = 3;       // 外显子名称
  optional string         icon = 4;           // 右侧图标
  optional string         pv = 5;             // 曝光上报标识
  optional string         url = 6;            // 跳转
  optional SettingType    setting_type = 7;   // 配置类型
  optional RedPoint       red_point = 8;      // 红点
}

message Entry{
  optional int32          id = 1;
  optional string         name = 2;
  optional string         sub_name = 3;
  optional string         icon = 4;
  optional string         pv = 5;
  optional string         url = 6;
  optional RedPoint       red_point = 7;

}
enum SettingType{
  NORMAL              = 0;    // 通用
  POINTS              = 1;    // 积分
  FINGERPRINTER       = 2;    // 指纹支付
  COUPON              = 3;    // 卡券
  SMART_WATCH         = 4;    // 智能手表
  GESTURE_PASSWORD    = 5;    // 手势密码
  SUBSCRIPTION_CENTER = 6;    // 订阅中心
  TRANSACTION         = 7;    // 交易记录
  CHANGE_PASSWORD     = 8;    // 修改密码
  RETRIEVE_PASSWORD   = 9;    // 找回密码
  PAYMENT_SECURITY    = 10;   // 支付安全
  FAQ                 = 11;   // 常见问题
  PERSONALIZED_H5     = 12;   // 支付个性化类型H5入口
  PERSONALIZED_SWITCH = 13;   // 支付个性化类型开关入口
  FACE_PAYMENT        = 14;   // 面容支付
  APP_MANAGE          = 15;   // 应用管理
}

// RedDot 新版的红点，返回给终端用于轮播
message RedDot {
  enum Type {
    NORMAL = 1;   // 普通红点
    TEXT = 2;     // 文字角标，此时content字段为一段文字
    PICTURE = 3;  // 图片角标，此时content字段为图片URL
  }
  optional int32 id = 1;              // 红点ID
  optional int32 app_id = 2;          // 对应的app
  optional Type type = 3;             // 红点类型
  optional string content = 4;        // 如果配置了此字段，则说明
  optional DateRange date_range = 5;  // 有效的时间区间
}