syntax = "proto3"; 
//package code generated by Rick  DO NOT EDIT.
package   trpc.iqun.join_qun_auto_switch;

//code generated by Rick  DO NOT EDIT.
option  java_package="com.tencent.trpcprotocol.iqun.join_qun_auto_switch.join_qun_auto_switch";
option  java_multiple_files = false; 
//java_outer_classname的命名不要与message、service、enum的命名相同
option  java_outer_classname  = "JoinQunAutoSwitchPB"; 
//code generated by Rick  DO NOT EDIT.
option  go_package ="git.woa.com/trpcprotocol/iqun/join_qun_auto_switch";

// 建议使用谷歌protobuf规范 遵循PB语法检查 
// 谷歌protobuf规范地址：https://developers.google.com/protocol-buffers/docs/style
// Proto格式检查（Tencent）包含：Google protobuf规范和数据校验检查 

// 不建议使用 google/protobuf/any.proto 
// any强依赖package type.googleapis.com/_packagename_._messagename_.   
// https://developers.google.com/protocol-buffers/docs/proto3#any 

// tRPC-Go数据校验模块（**移除注释使用**） 
// tsecstr仅允许中英文字母、数字、=、+、/、@、#、_、-传入。注意，字符集不包括空格、|等符号，如有需要，请自定义校验表达式。
// 详参见规则手册：https://iwiki.woa.com/pages/viewpage.action?pageId=241919333  
import "trpc/common/validate.proto";  

service JoinQunAutoSwitch { 
    // 根据群ID查看主群和备选群关系
    rpc ListGroups(ListGroupsReq) returns(ListGroupsRsp);
    // 添加备选群
    rpc AddSubGroups(AddSubGroupsReq) returns(AddSubGroupsRsp);
    // 删除备选群
    rpc DeleteSubGroup(DeleteSubGroupReq) returns(DeleteSubGroupRsp);
    // 校验主群和备选群是否符合规范
    rpc CheckGroups(CheckGroupsReq) returns(CheckGroupsRsp);
    
    // 根据群ID获取可加入备选群
    rpc RetrieveSubGroup(RetrieveSubGroupReq) returns(RetrieveSubGroupRsp);
    
    // 校验申请状态
    rpc CheckApplyStatus(CheckApplyStatusReq) returns(CheckApplyStatusRsp);
    
    // 检验账号/群安全状态
    rpc CheckSafeStatus(CheckSafeStatusReq) returns (CheckSafeStatusRsp);
    
    // 设置自动群满自动创群开关
    rpc SetAutoCreateGroupSwitch(SetAutoCreateGroupSwitchReq) returns (SetAutoCreateGroupSwitchRsp);
} 

// 后台内部使用
service AutoSwitchInternal {
    // 查看备选群
    rpc ListSubGroups(ListSubGroupsReq) returns(ListSubGroupsRsp);
    // 根据子群查询主群
    rpc QueryMasterGroup(QueryMasterGroupReq) returns(QueryMasterGroupRsp);
    // 创建加群链接
    rpc CreateJoinURL(CreateJoinURLReq) returns(CreateJoinURLRsp);
    // 获取加群链接
    rpc RetrieveJoinURL(RetrieveJoinURLReq) returns(RetrieveJoinURLRsp);
}

message SetAutoCreateGroupSwitchReq {
    uint64 group_id     = 1; // 群号
    uint32 switch_value = 2;  // 开关 1=打开, 2=关闭 见SwitchValue
}

enum SwitchValue {
    UNKNOWN_VALUE = 0; // 位置值
    OPEN          = 1; // 打开 
    CLOSE         = 2; // 关闭
}

message SetAutoCreateGroupSwitchRsp {
    
}


message CheckApplyStatusReq {
    
}

message CheckApplyStatusRsp {
    uint32 apply_status  = 1; // 状态，见ApplyStatus
}

enum ApplyStatus {
    WITHOUT_APPLY = 0; // 未申请 
    REJECTED      = 1; // 申请未通过
    APPROVED      = 2; // 申请通过
}

message CheckSafeStatusReq {
    uint64 group_id = 1; // 群号（如群号非空则校验账号安全状态，不为空则校验群安全状态）
}

message CheckSafeStatusRsp {
    uint32 status = 1; // 安全状态，见SafeStatus
}

enum SafeStatus {
    NORMAL_STATUS = 0; // 正常
    UNSAFE_STATUS = 1; // 非正常（被打击）
}


message CreateSubGroupsReq {
    string              master_group        = 1  [(validate.rules).string = { tsecstr: true, min_len: 1 }];  // 主群ID
    repeated string     sub_groups          = 2  [(validate.rules).repeated.min_items = 1]; // 子群ID
}

message CreateSubGroupsRsp {
    
}

message AddSubGroupsReq {
    string              master_group        = 1  [(validate.rules).string = { tsecstr: true, min_len: 1 }];   // 主群ID
    repeated string     sub_groups          = 2  [(validate.rules).repeated.min_items = 1]; // 子群ID
}

message AddSubGroupsRsp {
    Group       master                              = 1;
    repeated Group     sub_groups                   = 2; // 子群ID
    
}

message ListGroupsReq {
     // tRPC数据校验模块 开启自动数据校验。限制传入参数只能为tsecstr默认安全类型 
  	 string group_id = 1  [(validate.rules).string = { tsecstr: true, min_len: 1 }]; 
}

message ListGroupsRsp {
    Group               master                                  = 1; // 主群
    repeated Group      sub_groups                              = 2; // 子群列表
    bool                is_master                               = 3; // 是否是主群
}


message ListSubGroupsReq {
     // tRPC数据校验模块 开启自动数据校验。限制传入参数只能为tsecstr默认安全类型 
  	 string group_id = 1 [(validate.rules).string = { tsecstr: true, min_len: 1 }]; 
}

message ListSubGroupsRsp {
    string               master                                  = 1; // 主群
    repeated string      sub_groups                              = 2; // 子群列表
}

message DeleteSubGroupReq {
    string          master_group        = 1 [(validate.rules).string = { tsecstr: true, min_len: 1 }];   // 主群ID
    string          sub_group           = 2 [(validate.rules).string = { tsecstr: true, min_len: 1 }];  // 子群ID
}

message DeleteSubGroupRsp {
  
}

message CheckGroupsReq {
    string              master_group        = 1 [(validate.rules).string = { tsecstr: true, min_len: 1 }];  // 主群ID
    repeated string     sub_groups          = 2; // 子群ID
}

message CheckGroupsRsp {
    repeated string     name_wrong_group        = 1; // 命名错误的子群ID
    repeated string     binded_groups           = 2[deprecated = true]; // 已经被绑定的子群ID, 8.9.63 引入；8.9.68废弃
    repeated string     source_groups           = 3; // 已经设置了群来源的群（包括主群和子群）
    repeated string     binded_master_groups    = 4; // 已经是主群的子群ID
    repeated BindedSubGroup binded_sub_groups   = 5; // 已经被绑定的子群ID
    repeated string     unsafe_groups           = 6; // 不安全的子群ID
}

// 已经被绑定的子群
message BindedSubGroup{
    string group_id             = 1; 
    string master_group_id      = 2; // 被绑定的主群ID
}


message QueryMasterGroupReq{
     string          sub_group           = 1 [(validate.rules).string.tsecstr = true]; // 子群ID
}

message QueryMasterGroupRsp{
     string         master_group           = 1; // 主群ID
}

// 创建加群链接
message CreateJoinURLReq{
    string          group_id = 1  [(validate.rules).string = { tsecstr: true, min_len: 1 }];  // 群号
    repeated string sources  = 2;  // 群来源
}

// 创建加群链接
message CreateJoinURLRsp{
    
}

// 获取加群链接
message RetrieveJoinURLReq{
    string          group_id    = 1  [(validate.rules).string = { tsecstr: true, min_len: 1 }];  // 群号
    string          source      = 2 [(validate.rules).string.tsecstr = true]; // 群来源
}

message RetrieveJoinURLRsp{
    string url = 1;
}

// 获取可加入备选群
message RetrieveSubGroupReq{
    string group_id = 1[(validate.rules).string = { tsecstr: true, min_len: 1 }];  // 主群号
    uint32 scene    = 2; // 场景 （0-搜索场景，默认  1-资料卡场景，9060新增）
}

enum RetrieveScene {
    SEARCH_SCENE  = 0; // 搜索
    PROFILE_SCENE = 1; // 资料卡
}

message RetrieveSubGroupRsp{
    string group_id = 1; // 可加入的备选群号，若无可用备选群，返回空“”
    string group_name = 2; // 群名
    uint32 member_num = 3; // 群内当前人数
    uint32 member_max_num = 4; // 群内最大人数
    string group_face = 5; // 群头像
    string auth_sign = 6; // 加群签名
}

// 群相关信息
message Group {
    string id               = 1; // 群号
    string name             = 2; // 群名
    int64  member_num       = 3; // 群内当前人数
    int64  member_max_num   = 4; // 群内最大人数
}
